<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Twitterizer.OAuth</name>
    </assembly>
    <members>
        <member name="T:Twitterizer.OAuthTokens">
            <summary>Contains security tokens nessisary for performing authorized actions against the Twitter API</summary><seealso cref="!:Twitterizer.OAuthUtility"/><example>
      To perform authorized actions, you must create a new <c>OAuthTokens</c> variable and supply values for the <see cref="P:Twitterizer.OAuthTokens.ConsumerKey"/>, <see cref="P:Twitterizer.OAuthTokens.ConsumerSecret"/>, <see cref="P:Twitterizer.OAuthTokens.AccessToken"/>, and <see cref="P:Twitterizer.OAuthTokens.AccessTokenSecret"/> properties, as follows:
      <code lang="cs">
        OAuthTokens tokens = new OAuthTokens();
        tokens.AccessToken = "XXX";
        tokens.AccessTokenSecret = "XXX";
        tokens.ConsumerKey = "XXX";
        tokens.ConsumerSecret = "XXX";
      </code>
      <code lang="vb">
        Dim tokens As new OAuthTokens();
        tokens.AccessToken = "XXX"
        tokens.AccessTokenSecret = "XXX"
        tokens.ConsumerKey = "XXX"
        tokens.ConsumerSecret = "XXX"
      </code>
    </example>
        </member>
        <member name="P:Twitterizer.OAuthTokens.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.AccessTokenSecret">
            <summary>
            Gets or sets the access token secret.
            </summary>
            <value>The access token secret.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.ConsumerKey">
            <summary>
            Gets or sets the consumer key.
            </summary>
            <value>The consumer key.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.ConsumerSecret">
            <summary>
            Gets or sets the consumer secret.
            </summary>
            <value>The consumer secret.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.HasConsumerToken">
            <summary>
            Gets a value indicating whether this instance has consumer token values.
            </summary>
            <value>
            	<c>true</c> if this instance has consumer token; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.HasAccessToken">
            <summary>
            Gets a value indicating whether this instance has access token values.
            </summary>
            <value>
            	<c>true</c> if this instance has access token; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.HasBothTokens">
            <summary>
            Gets a value indicating whether this instance has values. This does not verify that the values are correct.
            </summary>
            <value>
            <c>true</c> if this instance has values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Twitterizer.HTTPVerb">
            <summary>
            Enumeration of the supported HTTP verbs supported by the <see cref="!:Twitterizer.Core.CommandPerformer"/>
            </summary>
        </member>
        <member name="F:Twitterizer.HTTPVerb.GET">
            <summary>
            The HTTP GET method is used to retrieve data.
            </summary>
        </member>
        <member name="F:Twitterizer.HTTPVerb.POST">
            <summary>
            The HTTP POST method is used to transmit data.
            </summary>
        </member>
        <member name="F:Twitterizer.HTTPVerb.DELETE">
            <summary>
            The HTTP DELETE method is used to indicate that a resource should be deleted.
            </summary>
        </member>
        <member name="T:Twitterizer.WebRequestBuilder">
            <summary>
            The Web Request Builder class.
            </summary>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.Realm">
            <summary>
            The HTTP Authorization realm.
            </summary>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.formData">
            <summary>
            Holds file data form performing multipart form posts.
            </summary>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.userAgent">
            <summary>
            Gets or sets the UserAgent.
            </summary>
            <value>The User Agent.</value>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.networkCredentials">
            <summary>
            Gets or sets the Basic Auth Credentials.
            </summary>
            <value>The Basic Auth Credentials.</value>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.OAuthParametersToIncludeInHeader">
            <summary>
            OAuth Parameters key names to include in the Authorization header.
            </summary>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.SecretParameters">
            <summary>
            Parameters that may appear in the list, but should never be included in the header or the request.
            </summary>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.#ctor(System.Uri,Twitterizer.HTTPVerb,System.String,System.Net.NetworkCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.WebRequestBuilder"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="verb">The http verb.</param>
            <param name="userAgent">The http user agent.</param>
            <param name="networkCredentials">The network credentials.</param>
            <remarks></remarks>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.#ctor(System.Uri,Twitterizer.HTTPVerb,Twitterizer.OAuthTokens,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.WebRequestBuilder"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="verb">The verb.</param>
            <param name="tokens">The tokens.</param>
            <param name="userAgent">The user agent.</param>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.ExecuteRequest">
            <summary>
            Executes the request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.PrepareRequest">
            <summary>
            Prepares the request. It is not nessisary to call this method unless additional configuration is required.
            </summary>
            <returns>A <see cref="T:System.Net.HttpWebRequest"/> object fully configured and ready for execution.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.AddQueryStringParametersToUri">
            <summary>
            Adds the parameters to request uri.
            </summary>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.SetupOAuth">
            <summary>
            Sets up the OAuth request details.
            </summary>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateSignature">
            <summary>
            Generates the signature.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateTimeStamp">
            <summary>
            Generate the timestamp for the signature        
            </summary>
            <returns>A timestamp value in a string.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateNonce">
            <summary>
            Generate a nonce
            </summary>
            <returns>A random number between 123400 and 9999999 in a string.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.NormalizeUrl(System.Uri)">
            <summary>
            Normalizes the URL.
            </summary>
            <param name="url">The URL to normalize.</param>
            <returns>The normalized url string.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.UrlEncode(System.String)">
            <summary>
            Encodes a value for inclusion in a URL querystring.
            </summary>
            <param name="value">The value to Url encode</param>
            <returns>Returns a Url encoded string</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.UrlEncode(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Encodes a series of key/value pairs for inclusion in a URL querystring.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>A string of all the <paramref name="parameters"/> keys and value pairs with the values encoded.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateAuthorizationHeader">
            <summary>
            Generates the authorization header.
            </summary>
            <returns>The string value of the HTTP header to be included for OAuth requests.</returns>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.RequestUri">
            <summary>
            Gets or sets the request URI.
            </summary>
            <value>The request URI.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Verb">
            <summary>
            Gets or sets the verb.
            </summary>
            <value>The verb.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Tokens">
            <summary>
            Gets or sets the oauth tokens.
            </summary>
            <value>The tokens.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Multipart">
            <summary>
            Gets or sets the Multipart config
            </summary>
            <value>Multipart</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.UseCompression">
            <summary>
            Gets or sets whether to use accept compression on this request
            </summary>
            <value>UseCompression</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Proxy">
            <summary>
            Gets or sets the proxy.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.UseOAuth">
            <summary>
            Gets or sets a value indicating whether the request will be signed with an OAuth authorization header.
            </summary>
            <value><c>true</c> if [use O auth]; otherwise, <c>false</c>.</value>
        </member>
    </members>
</doc>
